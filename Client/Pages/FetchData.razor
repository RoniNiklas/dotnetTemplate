@page "/fetchdata"
@using Client.Infra
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecast == null && errors?.Count() == 0)
{
    <p><em>Loading...</em></p>
}
else if (errors?.Count > 0) {
    <div>
        <ul>
            @foreach (var error in errors) {
                <li>@error</li>
            }
        </ul>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private WeatherForecastViewModel? forecast;
    private Dictionary<string, string> errors = new();

    protected override async Task OnInitializedAsync()
    {
        var res = await RPCClient.HandleAsync(new GetSingleWeatherForecast(1));
        forecast = res.Value0;
    }
}
